{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","fullPosts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBAAGD,UAAU,qBAAqBE,KAAI,iBAAYH,EAAQI,OAA1D,SACGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCVFC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzBA,EAASC,OAAS,EAEd,qBAAKP,UAAU,cAAf,SACGM,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,SAKhD,mBAAG,UAAQ,oBAAX,8BCXOC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGX,UAAU,WAAWE,KAAI,iBAAYS,EAAKR,OAA7C,SACGQ,EAAKV,SCAGW,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKb,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCa,EAAKC,QAEtC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAME,EAAKF,aAIzB,mBAAGX,UAAU,iBAAb,SACGa,EAAKT,OAGR,uBAEA,cAAC,EAAD,CAAaE,SAAUO,EAAKP,eCpBnBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAUR,KAAI,SAAAK,GAAI,OACjB,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCUtC,IAAMO,EAAYC,EAAgBT,KAAI,SAAAK,GAAI,kCACrCA,GADqC,IAExCF,MAVmBO,EAUDL,EAAKK,OAThBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAAW,MAU3DZ,UAPuBe,EAOGR,EAAKJ,GANxBa,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAyBA,EAJJH,KAcRM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,UAAWA,QCrBzBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8043c512.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${comment.email}`}>\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length > 0\n    ? (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo comment={comment} key={comment.id} />\n        ))}\n      </div>\n    )\n    : (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import './PostInfo.scss';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={post.user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n\n    <hr />\n\n    <CommentList comments={post.comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ fullPosts }) => (\n  <div className=\"PostList\">\n    {fullPosts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst fullPosts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList fullPosts={fullPosts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}